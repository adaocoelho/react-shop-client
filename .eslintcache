[{"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/index.js":"1","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/reportWebVitals.js":"2","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/App.js":"3","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Landing.js":"4","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/About.js":"5","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/shop/Shop.js":"6","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/shop/Products.js":"7","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/Header.js":"8","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Chatbot.js":"9","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Message.js":"10","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Card.js":"11","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/QuickReplies.js":"12","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/QuickReply.js":"13","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Login.js":"14","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Signup.js":"15","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/utils/auth.js":"16","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Success.js":"17"},{"size":592,"mtime":1607525179883,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607184005462,"results":"20","hashOfConfig":"19"},{"size":1074,"mtime":1607566136071,"results":"21","hashOfConfig":"19"},{"size":297,"mtime":1607559313345,"results":"22","hashOfConfig":"19"},{"size":314,"mtime":1607565854398,"results":"23","hashOfConfig":"19"},{"size":228,"mtime":1607294153159,"results":"24","hashOfConfig":"19"},{"size":181,"mtime":1607294112295,"results":"25","hashOfConfig":"19"},{"size":996,"mtime":1607559564800,"results":"26","hashOfConfig":"19"},{"size":7401,"mtime":1607556150457,"results":"27","hashOfConfig":"19"},{"size":911,"mtime":1607532717185,"results":"28","hashOfConfig":"19"},{"size":999,"mtime":1607486112218,"results":"29","hashOfConfig":"19"},{"size":1708,"mtime":1607485958727,"results":"30","hashOfConfig":"19"},{"size":1029,"mtime":1607485986310,"results":"31","hashOfConfig":"19"},{"size":1751,"mtime":1607525613478,"results":"32","hashOfConfig":"19"},{"size":1509,"mtime":1607527152635,"results":"33","hashOfConfig":"19"},{"size":916,"mtime":1607514557367,"results":"34","hashOfConfig":"19"},{"size":291,"mtime":1607560026396,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"on23t0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/index.js",[],["72","73"],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/reportWebVitals.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/App.js",["74"],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Landing.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/About.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/shop/Shop.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/shop/Products.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/Header.js",["75"],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Chatbot.js",["76"],"import React from \"react\"; //retirei {Component}\r\nimport axios from \"axios\";\r\nimport Message from \"./Message\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Card from \"./Card\";\r\nimport QuickReplies from \"./QuickReplies\";\r\nimport './Chatbot.css';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Chatbot extends React.Component {\r\n  messagesEnd;\r\n  talkInput;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // binding com callback\r\n    this.handleInputKeyPress = this.handleInputKeyPress.bind(this);\r\n    this.handleQuickReplyPayload = this.handleQuickReplyPayload.bind(this);\r\n\r\n    this.hide = this.hide.bind(this);\r\n    this.show = this.show.bind(this);\r\n\r\n    this.state = {\r\n      messages: [],\r\n      showBot: false, //visibilidade por default\r\n    };\r\n\r\n    if (cookies.get(\"cookiesId\") === undefined) {\r\n      cookies.set(\"cookiesId\", uuid(), { path: \"/\" });\r\n    }\r\n    console.log(cookies.get(\"cookiesId\"));\r\n  }\r\n\r\n  async text_query(queryText) {\r\n    let says = {\r\n      speaks: \"me\",\r\n      msg: {\r\n        text: {\r\n          text: queryText,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.setState({ messages: [...this.state.messages, says] });\r\n    const res = await axios.post(\"api/text-query\", {\r\n      text: queryText,\r\n      cookiesId: cookies.get(\"cookiesId\"),\r\n    });\r\n    for (let msg of res.data.fulfillmentMessages) {\r\n      //console.log(JSON.stringify(msg)); //ver estrutra da msg do dialogflow\r\n      says = {\r\n        speaks: \"Toby\",\r\n        msg: msg,\r\n      };\r\n      this.setState({ messages: [...this.state.messages, says] });\r\n    }\r\n  }\r\n\r\n  async event_query(eventName) {\r\n    const res = await axios.post(\"/api/event-query\", {\r\n      event: eventName,\r\n      cookiesId: cookies.get(\"cookiesId\"),\r\n    });\r\n    for (let msg of res.data.fulfillmentMessages) {\r\n      let says = {\r\n        speaks: \"me\",\r\n        msg: msg,\r\n      };\r\n      this.setState({ messages: [...this.state.messages, says] });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.event_query(\"Welcome\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.messagesEnd.scrollIntoView({ behaviour: \"smooth\" });\r\n    if (this.talkInput) {\r\n      this.talkInput.focus();\r\n    }\r\n  }\r\n\r\n  // fechar e abrir bot\r\n\r\n  show(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.setState({ showBot: true });\r\n  }\r\n\r\n  hide(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.setState({ showBot: false });\r\n  }\r\n\r\n  //quickreplies setup\r\n  handleQuickReplyPayload(event, payload, text) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    switch (payload) {\r\n      case \"training_skateclass\":\r\n        this.event_query(\"SKATECLASS\");\r\n      default:\r\n        this.text_query(text);\r\n        break;\r\n    }\r\n  }\r\n\r\n  renderCards(cards) {\r\n    return cards.map((card, i) => <Card key={i} payload={card.structValue} />);\r\n  }\r\n\r\n  renderOneMessage(message, i) {\r\n    if (message.msg && message.msg.text && message.msg.text.text) {\r\n      return (\r\n        <Message key={i} speaks={message.speaks} text={message.msg.text.text} />\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.cards\r\n    ) {\r\n      return (\r\n        <div key={i}>\r\n          <div className=\"card-panel- grey lighten-5 z-depth-1\">\r\n            <div style={{ overflow: \"hidden\" }}>\r\n              <div className=\"col s2\">\r\n                <a\r\n                  href=\"/\"\r\n                  className=\"btn-floating btn-large waves-effect waves-light green\"\r\n                >\r\n                  {message.speaks}\r\n                </a>\r\n              </div>\r\n              <div style={{ overflow: \"auto\", overflowY: \"scroll\" }}>\r\n                <div\r\n                  style={{\r\n                    height: 300,\r\n                    width:\r\n                      message.msg.payload.fields.cards.listValue.values.length *\r\n                      270,\r\n                  }}\r\n                >\r\n                  {this.renderCards(\r\n                    message.msg.payload.fields.cards.listValue.values\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.quick_replies\r\n    ) {\r\n      return (\r\n        <QuickReplies\r\n          text={\r\n            message.msg.payload.fields.text\r\n              ? message.msg.payload.fields.text\r\n              : null\r\n          }\r\n          key={i}\r\n          replyClick={this.handleQuickReplyPayload}\r\n          speaks={message.speaks}\r\n          payload={message.msg.payload.fields.quick_replies.listValue.values}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  renderMessages(returnedMessages) {\r\n    if (returnedMessages) {\r\n      return returnedMessages.map((message, i) => {\r\n        return this.renderOneMessage(message, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleInputKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.text_query(e.target.value);\r\n      e.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.showBot) {\r\n      return (\r\n        <div \r\n          style={{\r\n            height: 400,\r\n            width: 950,\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 200,\r\n            border: \"5px solid lightdark\",\r\n          }}\r\n        >\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n             \r\n              <Nav.Link href=\"/\" onClick={this.hide}>\r\n                    ❌\r\n                  </Nav.Link>\r\n            \r\n          </Navbar>\r\n\r\n          <div\r\n            id=\"chatbot\"\r\n            style={{ height: 388, width: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            {this.renderMessages(this.state.messages)}\r\n            <div\r\n              ref={(el) => {\r\n                this.messagesEnd = el;\r\n              }}\r\n              style={{ float: \"left\", clear: \"both\" }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col s12\">\r\n            <input\r\n              style={{\r\n                margin: 0,\r\n                paddingLeft: \"1%\",\r\n                paddingRight: \"1%\",\r\n                width: \"98%\",\r\n              }}\r\n              placeholder=\"type a message\"\r\n              type=\"text\"\r\n              ref={(input) => {\r\n                this.talkInput = input;\r\n              }}\r\n              onKeyPress={this.handleInputKeyPress}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: 400,\r\n            width: 400,\r\n            position: \"relative\", //change from absolute\r\n            bottom: 0,\r\n            right: 0,\r\n            border: \"5px solid lightdark\",\r\n          }}\r\n        >\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            \r\n            <Nav.Link href=\"/\" onClick={this.show}>\r\n                  CLICK FLIP TO OPEN ✌\r\n                </Nav.Link>\r\n          \r\n        </Navbar>\r\n          <div\r\n            ref={(el) => {\r\n              this.messagesEnd = el;\r\n            }}\r\n            style={{ float: \"left\", clear: \"both\" }}\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n","/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Message.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/Card.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/QuickReplies.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/chatbot/QuickReply.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Login.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Signup.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/utils/auth.js",[],"/mnt/c/Users/Adão Coelho/code/mycodingjunk/shopreactclient/src/components/pages/Success.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":32,"nodeType":"83","messageId":"84","endLine":2,"endColumn":38},{"ruleId":"81","severity":1,"message":"85","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":109,"column":7,"nodeType":"88","messageId":"89","endLine":111,"endColumn":15},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]